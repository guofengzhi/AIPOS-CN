<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiewen.modules.sys.dao.UserDao">


	<sql id="userColumns">
		a.id,
		a.office_id,
		a.login_name,
		a.password,
		a.no,
		a.name,
		a.email,
		a.phone,
		a.mobile,
		a.user_type,
		a.login_ip,
		a.login_date,
		a.remarks,
		a.login_flag,
		a.photo,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		a.is_developer,
		o.id AS "office.id",
		o.name AS "office.name",
		o.parent_id AS
		"office.parent.id",
		o.parent_ids AS "office.parentIds",
		ou.id AS
		"office.primaryPerson.id",
		ou.name AS "office.primaryPerson.name",
		ou2.id AS "office.deputyPerson.id",
		ou2.name AS
		"office.deputyPerson.name",
		o.area_id AS "office.area.id"
	</sql>

	<sql id="userJoins">
		LEFT JOIN sys_office c ON c.id = a.company_id
		LEFT JOIN sys_office o ON
		o.id = a.office_id
		<!-- LEFT JOIN sys_area ca ON ca.id = c.area_id LEFT JOIN sys_area oa ON 
			oa.id = o.area_id LEFT JOIN sys_user cu ON cu.id = c.primary_person LEFT 
			JOIN sys_user cu2 ON cu2.id = c.deputy_person -->
		LEFT JOIN sys_user ou ON ou.id = o.primary_person
		LEFT JOIN sys_user
		ou2 ON ou2.id = o.deputy_person<!-- LEFT JOIN sys_user_role ur ON ur.user_id 
			= a.id LEFT JOIN sys_role r ON r.id = ur.role_id -->
	</sql>

	<!-- 根据编号获得用户 -->
	<select id="get" resultType="com.jiewen.modules.sys.entity.User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>
	<!-- 查询表中下一个ID -->
	<select id="selectUserId" resultType="com.jiewen.modules.sys.entity.User">
		 select IF(max(id) IS NULL,1,max(id)+1) AS id from (  SELECT CAST( id  AS SIGNED)  AS id  FROM  sys_user ) a
	</select>
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="com.jiewen.modules.sys.entity.User" parameterType="com.jiewen.modules.sys.entity.User">
		SELECT
		<include refid="userColumns" /><!-- , ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins" /><!-- LEFT JOIN sys_role_office ro 
			ON ro.role_id = r.id -->
		WHERE (a.login_name = #{loginName} or a.mobile=#{loginName}) AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	<!-- 分页根据角色查询用户 -->
	<select id="findRoleUserList" resultType="com.jiewen.modules.sys.entity.User">
		SELECT 
		*
		from sys_user t
	        <if test="sysUserRole != null  and sysUserRole.selectedType != null and sysUserRole.selectedType == 1 and sysUserRole.selectedType != ''">
				 where  t.id  not in (select user_id from sys_user_role where role_id=#{sysUserRole.roleId})
			</if>
	         <if test="sysUserRole != null  and sysUserRole.selectedType != null and sysUserRole.selectedType == 2 and sysUserRole.selectedType != ''">
				 where  t.id   in (select user_id from sys_user_role where role_id=#{sysUserRole.roleId})
			</if>
			<if test="name != null and name != ''">
			AND  name like
				<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
				<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
				<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		   </if>
	        order by name
	</select>
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="com.jiewen.modules.sys.entity.User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id
			= #{role.id}
		</if>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="officeId != null and officeId != ''">
			AND (o.id = #{officeId} OR o.parent_ids LIKE
			<if test="dbName == 'oracle'">'%,'||#{officeId}||',%')</if>
			<if test="dbName == 'mssql'">'%,'+#{officeId}+',%')</if>
			<if test="dbName == 'mysql'">CONCAT('%,', #{officeId}, ',%'))</if>
		</if>
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="loginName != null and loginName != ''">
			AND a.login_name like
			<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<if test="officeId != null and officeId != ''">
			AND a.office_id =
			<if test="dbName == 'oracle'">#{officeId}</if>
			<if test="dbName == 'mssql'">#{officeId}</if>
			<if test="dbName == 'mysql'">#{officeId}</if>
		</if>
		<if test="companyId != null and companyId != ''">
			AND a.company_Id =
			<if test="dbName == 'oracle'">#{companyId}</if>
			<if test="dbName == 'mssql'">#{companyId}</if>
			<if test="dbName == 'mysql'">#{companyId}</if>
		</if>
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		 ORDER BY 
        <if test="sortInfo != null and sortInfo != ''">
           ${sortInfo}
        </if>
		<if test="sortInfo == null or sortInfo == ''">
		c.code, o.code, a.name
		</if> 
	</select>

	<!-- 根据OfficeId获取用户（树查询用户时用） -->
	<select id="findUserByOfficeId" resultType="com.jiewen.modules.sys.entity.User" useCache="true">
		SELECT
		a.id, a.name, a.login_name
		FROM sys_user a
		WHERE a.del_flag =
		#{DEL_FLAG_NORMAL}
		AND a.office_id = #{officeId}
		ORDER BY a.name
	</select>

	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="com.jiewen.modules.sys.entity.User">
		SELECT
		<include refid="userColumns" />
		FROM sys_user a
		<include refid="userJoins" />
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY c.code, o.code, a.name
	</select>
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
		COUNT(1)
		FROM sys_user
		a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
		id,
		<trim suffixOverrides=",">
		<if test="officeId != null and officeId != ''">
		office_id,
		</if>
		<if test="companyId != null and companyId != ''">
		company_Id,
		</if>
		<if test="loginName != null and loginName != ''">
		login_name,
		</if>
		<if test="password != null and password != ''">
			password,
		</if>
		<if test="no != null and no != ''">
		no,
		</if>
		<if test="name != null and name != ''">
		name,
		</if>
		<if test="email != null and email != ''">
		email,
		</if>
		<if test="phone != null and phone != ''">
		phone,
		</if>
		<if test="mobile != null and mobile != ''">
			mobile,
		</if>
		<if test="userType != null and userType != ''">
		user_type,
		</if>
		<if test="createBy.id != null and createBy.id != ''">
		create_by,
		</if>
		<if test="createDate != null ">
		create_date,
		</if>
		<if test="updateBy != null and updateBy.id != null and updateBy.id != ''">
		update_by,
		</if>
		<if test="updateDate != null">
		update_date,
		</if>
		<if test="remarks != null and remarks != ''">
		remarks,
		</if>
		<if test="loginFlag != null and loginFlag != ''">
		login_flag,
		</if>
		<if test="photo != null and photo != ''">
		photo,
		</if>
		<if test="delFlag != null and delFlag != ''">
		del_flag,
		</if>
		</trim>	
		) VALUES (
		#{id},
		<trim suffixOverrides=",">
		<if test="officeId != null and officeId != ''">
		#{officeId},
		</if>
		<if test="companyId != null and companyId != ''">
		#{companyId},
		</if>
		<if test="loginName != null and loginName != ''">
		#{loginName},
		</if>
		<if test="password != null and password != ''">
		#{password},
		</if>
		<if test="no != null and no != ''">
		#{no},
		</if>
		<if test="name != null and name != ''">
		#{name},
		</if>
		<if test="email != null and email != ''">
		#{email},
		</if>
		<if test="phone != null and phone != ''">
		#{phone},
		</if>
		<if test="mobile != null and mobile != ''">
		#{mobile},
		</if>
		<if test="userType != null and userType != ''">
		#{userType},
		</if>
		<if test="createBy.id != null and createBy.id != ''">
		#{createBy.id},
		</if>
		<if test="createDate != null ">
		#{createDate},
		</if>
		<if test="updateBy.id != null and updateBy.id != ''">
		#{updateBy.id},
		</if>
		<if test="updateDate != null">
		#{updateDate},
		</if>
		<if test="remarks != null and remarks != ''">
		#{remarks},
		</if>
		<if test="loginFlag != null and loginFlag != ''">
		#{loginFlag},
		</if>
		<if test="photo != null and photo != ''">
		#{photo},
		</if>
		<if test="delFlag != null and delFlag != ''">
		#{delFlag},
		</if>
		</trim>
		)
	</insert>

	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user
	<!--  -->
		<trim prefix="SET" suffixOverrides=",">
		<if test="officeId != null and officeId !=''">
		office_id = #{officeId},
		</if>
		<if test="loginName !=null and loginName != ''" >
		login_name = #{loginName},
		</if>
		<if test="password !=null and password != ''">
		password = #{password},
		</if>
		<if test="no !=null and no != ''">
		no = #{no},
		</if>
		<if test="name !=null and name != ''">
		name =
		#{name},
		</if>
		<if test="email !=null and email != ''">
		email = #{email},
		</if>
		<if test="phone !=null and phone != ''">
		phone = #{phone},
		</if>
		<if test="mobile !=null and mobile != ''">
		mobile = #{mobile},
		</if>
		<if test="userType !=null and userType != ''">
		user_type = #{userType},
		</if>
		<if test="updateBy != null and updateBy.id !=null and updateBy.id != ''">
		update_by = #{updateBy.id},
		</if>
		<if test="updateDate !=null ">
		update_date =
		#{updateDate},
		</if>
		<if test="remarks !=null and remarks != ''">
		remarks = #{remarks},
		</if>
		<if test="loginFlag !=null and loginFlag != ''">
		login_flag = #{loginFlag},
		</if>
		<if test="photo !=null and photo != ''">
			photo = #{photo},
		</if>
		</trim>
		WHERE id = #{id}
	</update>

	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_user_role WHERE user_id = #{id}
	</delete>
   <delete id="deleteUserRoleA">
		DELETE FROM sys_user_role WHERE user_id = #{id}
		and role_id=#{role.id}
	</delete>
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}
			<if test="dbName != 'mssql'">
				FROM dual
			</if>
		</foreach>
	</insert>
    <!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRoleA">
		INSERT INTO sys_user_role(user_id, role_id)
		<foreach collection="sysUserRoleList" item="sysUserRole" separator=" union all ">
			SELECT #{sysUserRole.userId}, #{sysUserRole.roleId}
			<if test="dbName != 'mssql'">
				FROM dual
			</if>
		</foreach>
	</insert>
	<!-- 更新用户信息 -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
			<trim  suffix="WHERE ID = #{id}" suffixOverrides=",">
			<if test="email != null and email != ''">
			email = #{email},
			</if>
			<if test="phone !=null and phone != ''">
			phone = #{phone},
			</if>
			<if test="mobile != null and mobile != ''">
			mobile = #{mobile},
			</if>	
			<if test="updateBy != null and updateBy.id !=null and updateBy.id != ''">
			update_by = #{updateBy.id},
			</if>
			<if test="updateDate !=null">
			update_date = #{updateDate},
			</if>
			<if test="remarks !=null and remarks != ''">
			remarks = #{remarks},
			</if>
			<if test="photo !=null and photo != ''">
			photo = #{photo},
			</if>
		</trim>
	</update>

	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
		password = #{password}
		WHERE id =
		#{id}
	</update>

	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET
		login_ip = #{loginIp},
		login_Date =
		#{loginDate}
		WHERE id = #{id}
	</update>

	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE sys_user SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

</mapper>